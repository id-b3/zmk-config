/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define COLEMAK 0
#define SYMNUM 1
#define NAV 2
#define SPECIAL 3
#define GAMING 4

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <40>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };

        combo_underscore {
            timeout-ms = <35>;
            key-positions = <12 13>;
            bindings = <&kp UNDER>;
        };

        combo_quote {
            timeout-ms = <35>;
            key-positions = <17 18>;
            bindings = <&kp SQT>;
        };

        combo_del {
            timeout-ms = <40>;
            key-positions = <10 11>;
            bindings = <&kp DEL>;
        };

        combo_bslsh {
            timeout-ms = <40>;
            key-positions = <7 8>;
            bindings = <&kp NON_US_BSLH>;
        };

        combo_caps {
            timeout-ms = <40>;
            key-positions = <12 17>;
            bindings = <&caps_word>;
        };
    };
};

/ {
    chosen { zmk,battery = &vbatt; };

    vbatt: vbatt {
        compatible = "zmk,battery-nrf-vddh";
        label = "VBATT";
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        plus_minus: plus_minus {
            compatible = "zmk,behavior-macro";
            label = "PLUS_MINUS";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_2 &kp KP_NUMBER_4 &kp KP_NUMBER_1>,
                <&macro_release>,
                <&kp LEFT_ALT>;
        };

        mouse_jit: mouse_jit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp A>, <&macro_wait_time 10000>;

            label = "MOUSE_JIT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak_layer {
            bindings = <
&kp Q       &kp W       &kp F             &kp P        &kp G    &kp J  &kp L          &kp U        &kp Y       &kp SEMI
&hm LGUI A  &hm LALT R  &hm LSHFT S       &hm LCTRL T  &kp D    &kp H  &hm RCTRL N    &hm RSHFT E  &hm LALT I  &hm RGUI O
&kp Z       &kp X       &kp C             &kp V        &kp B    &kp K  &kp M          &kp COMMA    &kp DOT     &kp FSLH
                        &mt LSHIFT ENTER  &lt 1 SPACE  &none    &none  &kp BACKSPACE  &lt 2 TAB
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT &inc_dec_kp RIGHT LEFT>;
        };

        symnum_layer {
            bindings = <
&kp LA(F4)       &kp AT     &kp DQT    &kp LPAR  &kp RPAR     &none  &kp N7  &kp N8  &kp N9  &kp GRAVE
&kp NON_US_HASH  &kp EQUAL  &kp MINUS  &kp EXCL  &kp PRCNT    &none  &kp N4  &kp N5  &kp N6  &kp N0
&plus_minus      &kp LBRC   &kp RBRC   &kp LBKT  &kp RBKT     &none  &kp N1  &kp N2  &kp N3  &kp DOT
                            &trans     &trans    &none        &none  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT &inc_dec_kp RIGHT LEFT>;
        };

        nav_layer {
            bindings = <
&kp KP_NUMLOCK  &kp F7  &kp F8  &kp F9  &kp F10    &kp PG_UP  &kp HOME  &kp UP    &kp END    &none
&kp CAPSLOCK    &kp F4  &kp F5  &kp F6  &kp F11    &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &none
&kp SCROLLLOCK  &kp F1  &kp F2  &kp F3  &kp F12    &none      &none     &none     &none      &none
                        &none   &none   &none      &none      &none     &none
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PG_UP>;
        };

        special_layer {
            bindings = <
&bt BT_CLR    &bt BT_NXT    &bt BT_PRV    &to 5         &to 4           &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &rgb_ug RGB_SAI
&bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0    &rgb_ug RGB_OFF  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFR  &rgb_ug RGB_SAD
&mouse_jit    &none         &none         &none         &none           &none            &none            &none            &none            &none
                            &none         &none         &none           &none            &none            &none
            >;
        };

        gaming_layer {
            bindings = <
&kp ENTER  &kp Q  &kp W    &kp E      &kp R    &kp T  &kp Y  &kp U    &kp O     &to 0
&kp LSHFT  &kp A  &kp S    &kp D      &kp F    &kp G  &kp J  &kp K    &kp L     &none
&kp LCTRL  &kp Z  &kp X    &kp C      &kp V    &kp M  &kp I  &kp DOT  &kp LALT  &none
                  &kp TAB  &kp SPACE  &none    &none  &none  &none
            >;

            sensor-bindings = <&inc_dec_kp PG_DN PG_UP &inc_dec_kp PG_DN PG_UP>;
        };

        WotR {
            bindings = <
&kp ENTER  &kp Q  &kp W    &kp E      &kp G        &kp R   &kp N7  &kp N8  &kp N9  &to 0
&kp LSHFT  &kp A  &kp S    &kp D      &kp H        &kp F   &kp N4  &kp N5  &kp N6  &kp F5
&kp BSPC   &kp M  &kp J    &kp C      &kp I        &kp B   &kp N1  &kp N2  &kp N3  &kp F8
                  &kp TAB  &kp SPACE  &kp SPACE    &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };
    };
};
